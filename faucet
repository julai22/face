<!DOCTYPE html>
<html lang="pt">
<head>
  <meta charset="UTF-8">
  <title>PEPE Faucet Simulado</title>
  <style>
    body {
      font-family: sans-serif;
      background: #0e0e0e;
      color: #fff;
      text-align: center;
      padding: 40px;
    }
    .card {
      background: #1c1c1c;
      padding: 30px;
      border-radius: 20px;
      display: inline-block;
      box-shadow: 0 0 20px rgba(0,255,0,0.2);
      max-width: 400px;
    }
    button {
      background: #00ff88;
      color: #000;
      padding: 15px 30px;
      border: none;
      border-radius: 10px;
      font-size: 18px;
      cursor: pointer;
      margin: 5px;
    }
    button:disabled {
      background: #555;
      cursor: not-allowed;
    }
    input {
      margin-top: 10px;
      padding: 10px;
      border-radius: 5px;
      border: none;
      width: 80%;
      font-size: 16px;
    }
    #admin-panel {
      margin-top: 30px;
      text-align: left;
      background: #222;
      padding: 15px;
      border-radius: 10px;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
    }
    #admin-panel h3 {
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <div class="card">
    <h1>Faucet PEPE</h1>
    <input type="text" id="wallet" placeholder="Digite sua carteira PEPE" />
    <p>Saldo dispon√≠vel no faucet: <strong id="faucet-balance">0</strong> PEPE</p>
    <p>Seu saldo: <strong id="user-balance">0</strong> PEPE</p>
    <p>Pr√≥ximo claim em: <strong id="timer">0</strong> segundos</p>
    <button id="claim-button" onclick="claimPepe()">Claim 50 PEPE</button>
    <button onclick="sacarPepe()">üí∏ Sacar PEPE</button>
    <button onclick="recarregarFaucet()">üîÅ Recarregar Faucet</button>
    <p id="message"></p>
  </div>

  <div id="admin-panel">
    <h3>üîê Painel do Admin</h3>
    <p>Total de claims: <strong id="claim-count">0</strong></p>
    <p>√öltimo endere√ßo usado: <strong id="last-wallet">-</strong></p>
    <p>Refer√™ncia atual: <strong id="ref-id">-</strong></p>
    <p>Visitantes √∫nicos simulados: <strong id="visitor-id"></strong></p>
  </div>

  <script>
    let cooldown = 30;
    const claimAmount = 50;
    const initialFaucetBalance = 2000000000000;
    const minimumWithdraw = 500;

    const faucetBalanceDisplay = document.getElementById('faucet-balance');
    const userBalanceDisplay = document.getElementById('user-balance');
    const timerDisplay = document.getElementById('timer');
    const claimButton = document.getElementById('claim-button');
    const message = document.getElementById('message');
    const walletInput = document.getElementById('wallet');

    const claimCountDisplay = document.getElementById('claim-count');
    const lastWalletDisplay = document.getElementById('last-wallet');
    const refIdDisplay = document.getElementById('ref-id');
    const visitorIdDisplay = document.getElementById('visitor-id');

    let faucetBalance = parseInt(localStorage.getItem('faucetBalance')) || initialFaucetBalance;
    let userBalance = parseInt(localStorage.getItem('userBalance')) || 0;
    let lastClaim = parseInt(localStorage.getItem('lastClaim')) || 0;
    let claimCount = parseInt(localStorage.getItem('claimCount')) || 0;
    let visitorId = localStorage.getItem('visitorId') || Math.floor(Math.random() * 1000000000);
    localStorage.setItem('visitorId', visitorId);

    const urlParams = new URLSearchParams(window.location.search);
    const refId = urlParams.get('ref') || '-';
    refIdDisplay.textContent = refId;
    visitorIdDisplay.textContent = visitorId;

    function updateDisplay() {
      faucetBalanceDisplay.textContent = faucetBalance.toLocaleString();
      userBalanceDisplay.textContent = userBalance.toLocaleString();
      const now = Math.floor(Date.now() / 1000);
      const remaining = Math.max(0, cooldown - (now - lastClaim));
      timerDisplay.textContent = remaining;
      claimButton.disabled = remaining > 0;
      claimCountDisplay.textContent = claimCount;
    }

    function claimPepe() {
      const wallet = walletInput.value.trim();
      if (!wallet) {
        message.textContent = "Digite sua carteira PEPE.";
        return;
      }
      const now = Math.floor(Date.now() / 1000);
      if (now - lastClaim < cooldown) return;
      if (faucetBalance < claimAmount) {
        message.textContent = "Faucet esgotado. Tente mais tarde.";
        return;
      }

      userBalance += claimAmount;
      faucetBalance -= claimAmount;
      lastClaim = now;
      claimCount++;

      localStorage.setItem('userBalance', userBalance);
      localStorage.setItem('faucetBalance', faucetBalance);
      localStorage.setItem('lastClaim', lastClaim);
      localStorage.setItem('claimCount', claimCount);
      localStorage.setItem('lastWallet', wallet);

      message.textContent = `Voc√™ recebeu ${claimAmount} PEPE!`;
      lastWalletDisplay.textContent = wallet;
      updateDisplay();
    }

    function sacarPepe() {
      const wallet = walletInput.value.trim();
      if (!wallet) {
        message.textContent = "Digite sua carteira PEPE para sacar.";
        return;
      }
      if (userBalance < minimumWithdraw) {
        message.textContent = `Voc√™ precisa de pelo menos ${minimumWithdraw} PEPE para sacar.`;
        return;
      }
      message.textContent = `Saque de ${userBalance} PEPE enviado para ${wallet} (simulado).`;
      userBalance = 0;
      localStorage.setItem('userBalance', userBalance);
      updateDisplay();
    }

    function recarregarFaucet() {
      faucetBalance = initialFaucetBalance;
      localStorage.setItem('faucetBalance', faucetBalance);
      message.textContent = "Faucet recarregado com sucesso.";
      updateDisplay();
    }

    const lastWallet = localStorage.getItem('lastWallet') || '-';
    lastWalletDisplay.textContent = lastWallet;

    setInterval(updateDisplay, 1000);
    updateDisplay();
  </script>
</body>
</html>
